package com.quadratic.main;

import java.util.ArrayList;
import java.util.List;

/**
 * A class used to test the
 * functionality of the Quadratic class.
 * 
 * Date: 9-22-14
 * 
 * @author Ryan Hochmuth & Jason Griffith
 *
 */
public class QuadTest 
{
	/***********************
	 * Quadratics
	 **********************/
	private static Quadratic quad1 = new Quadratic();
	private static Quadratic quad2 = new Quadratic();
	// quad3 is the sum of quad1 and quad2
	private static Quadratic quad3 = new Quadratic();
	
	
	/**
	 * Gives a description of what
	 * the program is doing.
	 */
	public void intro()
	{
		
	}
	
	/**
	 * 
	 * Does the required calculation, 
	 * creates a clone of the first quadratic,
	 * checks if they are aliases, then checks 
	 * if the two quadratics have the same coefficients. 
	 */
	public static void calculations(double xValue,double scaleValue)
	{
		//quad1.evalExpression(xValue);
		//quad1.scale(scaleValue, quad1);
		//quad2.evalExpression(xValue);
		//quad2.scale(scaleValue, quad2);
		//quad3 = Quadratic.sum(quad1,quad2);
		System.out.println("Quad 1 CoefA: "+quad1.getCoefA());
		System.out.println("Quad 1 CoefB: "+quad1.getCoefB());
		System.out.println("Quad 1 CoefC: "+quad1.getCoefC());
		System.out.println("Quad 2 CoefA: "+quad1.getCoefA());
		System.out.println("Quad 2 CoefB: "+quad1.getCoefB());
		System.out.println("Quad 2 CoefC: "+quad2.getCoefC());
	}
	
	
	/**
	 * Parses a String line into
	 * Separate tokens.
	 * @param line - The input String
	 */
	public static void parse(String line)
	{
		boolean catchCalled = false;
		double scale = 0;
		double xVal = 0;
		String[] tokens = line.split("\\s+"); //Splits line by consecutive tokens " "
		
		if (tokens.length<8){ //Returns before recording bad entries in List
			return;
		}
		for(int x = 0; x < 8; x++)
		{
			try{
				switch (x){
					case 0:
						quad1.setCoefA(Double.parseDouble(tokens[x]));
						break;
					case 1:
						quad1.setCoefB(Double.parseDouble(tokens[x]));
						break;
					case 2:
						quad1.setCoefC(Double.parseDouble(tokens[x]));
						break;
					case 3:
						xVal= Double.parseDouble(tokens[x]);
						break;
					case 4:
						scale= Double.parseDouble(tokens[x]);
						break;
					case 5:
						quad2.setCoefA(Double.parseDouble(tokens[x]));
						break;
					case 6:
						quad2.setCoefB(Double.parseDouble(tokens[x]));
						break;
					case 7:
						quad2.setCoefC(Double.parseDouble(tokens[x]));
						break;
					default:
						System.out.println("Range changed check loop condition");
						
				}//end switch
			}//End Try block
			catch (NumberFormatException e) {
			    e.printStackTrace();
			    quad1 = new Quadratic();//Resets fields in object q1,q2
				quad2 = new Quadratic();
				catchCalled = true;
				x=0;
			}
		
		}//end for loop
		if (catchCalled == false)
			calculations(xVal,scale);
	}
	

	/**
	 * Create the output of information
	 * generated by this program.
	 */
	public void output()
	{
		
	}
}
